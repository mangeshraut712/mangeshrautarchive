name: 🚀 Deploy Portfolio with AI Integration

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔑 Configure API Keys for Production
      run: |
        # Create production config with GitHub secrets properly embedded
        echo "// 🚀 PRODUCTION CONFIGURATION - Generated by GitHub Actions at $(date)" > js/config.local.js
        echo "// 🔐 Using GitHub Repository Secrets securely embedded" >> js/config.local.js
        echo "" >> js/config.local.js
        echo "export const localConfig = {" >> js/config.local.js
        echo "  // 🔥 Grok xAI - Latest AI Model" >> js/config.local.js
        echo "  grokEnabled: true," >> js/config.local.js
        echo "  grokApiKey: '$GROK_API_KEY'," >> js/config.local.js
        echo "" >> js/config.local.js
        echo "  // 🤖 Claude (Anthropic) - Fallback AI" >> js/config.local.js
        echo "  anthropicEnabled: true," >> js/config.local.js
        echo "  anthropicApiKey: '$ANTHROPIC_API_KEY'," >> js/config.local.js
        echo "" >> js/config.local.js
        echo "  // 📚 Other API configurations" >> js/config.local.js
        echo "  wikipediaEnabled: true," >> js/config.local.js
        echo "  duckduckgoEnabled: true," >> js/config.local.js
        echo "  stackoverflowEnabled: true," >> js/config.local.js
        echo "" >> js/config.local.js
        echo "  // 🔧 MCP Server integrations" >> js/config.local.js
        echo "  mcpEnabled: true," >> js/config.local.js
        echo "  perplexityEnabled: true," >> js/config.local.js
        echo "  githubEnabled: true" >> js/config.local.js
        echo "};" >> js/config.local.js
        echo "" >> js/config.local.js
        echo "// ✅ Production config loaded - API keys securely embedded in build" >> js/config.local.js

        # Show build info
        echo "🔑 Config file generated with embedded API keys"
      env:
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

    - name: 📋 Configure Perplexity MCP Server
      run: |
        # Create Perplexity MCP configuration
        cat > perplexity-mcp.json << EOF
        {
          "mcpServers": {
            "pplx-server": {
              "command": "node",
              "args": ["/Users/mangeshraut/Documents/Cline/MCP/perplexity-server/src/index.ts"],
              "env": {
                "PERPLEXITY_API_KEY": "$PERPLEXITY_API_KEY"
              }
            }
          }
        }
        EOF
      env:
        PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}

    - name: 🏗️ Build Portfolio
      run: npm run build
      env:
        NODE_ENV: production

    - name: 🚀 Deploy to GitHub Pages (/docs folder)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        # Copy built files to docs/ folder (GitHub Pages deployment)
        echo "📁 Deploying built files to docs/ folder..."
        rm -rf docs/
        cp -r dist/ docs/

        # Disable Jekyll processing for static site
        touch docs/.nojekyll

        # Commit the deployment files to main branch
        git config --local user.name 'github-actions[bot]'
        git config --local user.email 'github-actions[bot]@users.noreturn.github.com'

        git add docs/

        # Only commit if there are changes
        if git diff --staged --quiet; then
          echo "✅ No changes to commit - build is up to date"
        else
          echo "📝 Committing deployment files..."
          git commit -m "🚀 Deploy to GitHub Pages"
          git commit --amend --no-edit
          git push origin main
          echo "🎉 Successfully deployed to main branch!"
        fi

        echo ""
        echo "🌍 GitHub Pages Configuration:"
        echo "1. Go to Repository → Settings → Pages"
        echo "2. Select 'Deploy from a branch'"
        echo "3. Choose branch: 'main' folder: '/docs'"
        echo "4. URL: https://mangeshraut712.github.io/mangeshrautarchive"
        echo ""
        echo "✅ Build complete with API keys embedded!"
        echo "📦 Files ready in docs/ folder"
